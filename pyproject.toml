[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "snakedeploy"
dynamic = ["version"]
description = "Deploy a snakemake pipeline from GitHub"
readme = "README.md"
authors = [
    {name = "Vanessa Sochat", email = "vsochat@stanford.edu"}
]
license = {text = "MPL 2.0"}
requires-python = ">=3.8"
classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Topic :: Software Development",
    "Topic :: Scientific/Engineering",
    "Natural Language :: English",
    "Operating System :: Unix",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["snakemake", "pipeline", "deployment"]

dependencies = [
    "requests",
    "pandas",
    "jinja2",
    "pyyaml",
    "pygithub",
    "packaging",
    "reretry",
    "setuptools",
]

[project.optional-dependencies]
test = ["pytest>=6.0.0"]
all = ["pytest>=6.0.0"]

[project.urls]
Homepage = "https://github.com/snakemake/snakedeploy"
Documentation = "https://snakedeploy.readthedocs.io"

[project.scripts]
snakedeploy = "snakedeploy.client:main"

[tool.setuptools_scm]
version_file = "src/snakedeploy/_version.py"
local_scheme = "no-local-version"

[tool.setuptools.packages.find]
where = ["src"]

[tool.pixi.project]
name = "snakedeploy"
channels = ["conda-forge", "bioconda"]
platforms = ["linux-64", "osx-arm64", "win-64", "osx-64", "linux-aarch64"]

[tool.pixi.pypi-dependencies]
snakedeploy = { path = ".", editable = true }

[tool.pixi.environments]
dev = { features = ["test", "style"] }
py38 = { features = ["py38", "test"] }
py39 = { features = ["py39", "test"] }
py310 = { features = ["py310", "test"] }
py311 = { features = ["py311", "test"] }
py312 = { features = ["py312", "test"] }
py313 = { features = ["py313", "test"] }
quality = { features = ["style"] }
build = { features = ["build"] }

[tool.pixi.feature.py38.dependencies]
python = ">=3.8.0,<3.9"

[tool.pixi.feature.py39.dependencies]
python = ">=3.9.0,<3.10"

[tool.pixi.feature.py310.dependencies]
python = ">=3.10.0,<3.11"

[tool.pixi.feature.py311.dependencies]
python = ">=3.11.0,<3.12"

[tool.pixi.feature.py312.dependencies]
python = ">=3.12.0,<3.13"

[tool.pixi.feature.py313.dependencies]
python = ">=3.13.0,<3.14"

[tool.pixi.feature.test.dependencies]
pytest = ">=6.0.0"

[tool.pixi.feature.style.dependencies]
black = "*"
pyflakes = "*"

[tool.pixi.feature.style.tasks]
format = { cmd = "black src/ tests/*.py", description = "Format the code" }
lint = { cmd = "pyflakes src/snakedeploy", description = "Check imports with pyflakes" }

[tool.pixi.feature.test.tasks]
test = { cmd = "bash tests/test_client.sh", description = "Run the test suite" }

[tool.pixi.feature.build.dependencies]
twine = ">=6.1.0,<7"
python-build = ">=1.2.2,<2"

[tool.pixi.feature.build.tasks]
build = { cmd = "python -m build", description = "Build the package into the dist/ directory" }
check-build = { cmd = "python -m twine check --strict dist/*", depends-on = [
  "build",
], description = "Check that the package can be uploaded" }
